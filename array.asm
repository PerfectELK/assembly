section .bss ; Это секция для резервирования данных
array resb 256 ; резеврвируем 256 байт а в array будет храниться адрес 1 байта

global _start
section .text ; Секция с исполняемым кодом
_start: mov ecx, 256 ; перемещаем в регистр ecx число 256
mov edi, array ; перемещаем в регистр edi адрес первого байта массива
mov al, '@' ; перемещаем в регистр al собаку(но не буквально)
again: mov [edi], al ; тут опять метка чтобы можно было юзать цикл, а еще квадратные скобки(они означают что мы перемещаем инфу не в регистр edi обращаемся к памяти по адресу, который лежит в регистре)
       inc edi ; инкрементим регистр edi чтобы теперь обращаться к другому байту
       dec ecx ; декрементим  ecx
       jnz again ; если ecx не равен 0 то переходим к метке again
mov ebx, 0; exit code
mov eax, 1; 1 = sys_exit
int 0x80; прерывание